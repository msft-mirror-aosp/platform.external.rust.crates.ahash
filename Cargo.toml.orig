[package]
name = "ahash"
version = "0.5.8"
authors = ["Tom Kaitchuck <Tom.Kaitchuck@gmail.com>"]
license = "MIT OR Apache-2.0"
description = "A non-cryptographic hash function using AES-NI for high performance"
documentation = "https://docs.rs/ahash"
repository = "https://github.com/tkaitchuck/ahash"
keywords = ["hash", "hasher", "hashmap", "aes", "no-std"]
categories = ["algorithms", "data-structures", "no-std"]
edition = "2018"
readme = "README.md"

[lib]
name = "ahash"
path = "src/lib.rs"
test = true
doctest = true
bench = true
doc = true

[features]
default = ["std"]

# Enabling this will enable `AHashMap` and `AHashSet`, and runtime key generation.
std = ["getrandom", "lazy_static"]

# This is an alternitive to std which does compile time key generation so that the standard library is not required.
# This implies the produced binary will not be identical. If both this and `std` are disabled constant keys are used.
compile-time-rng = ["const-random"]

# Enables specilization (requires nightly)
specialize = []

[[bench]]
name = "ahash"
path = "tests/bench.rs"
harness = false

[[bench]]
name = "map"
path = "tests/map_tests.rs"
harness = false

[profile.test]
opt-level = 2
lto = 'fat'

[profile.release]
opt-level = 3
debug = false
lto = 'fat'
debug-assertions = false
codegen-units = 1

[profile.bench]
opt-level = 3
debug = false
lto = 'fat'
debug-assertions = false
codegen-units = 1

[dependencies]
lazy_static = { version = "1.4.0", optional = true }
getrandom = { version = "0.2.0", optional = true }
const-random = { version = "0.1.6", optional = true }

[dev-dependencies]
no-panic = "0.1.10"
criterion = {version =  "0.3.2"}
seahash = "4.0"
fnv = "1.0.5"
fxhash = "0.2.1"
hex = "0.4.2"
rand = "0.7.3"

[package.metadata.docs.rs]
rustc-args = ["-C", "target-feature=+aes"]
rustdoc-args = ["-C", "target-feature=+aes"]
features = ["std"]
